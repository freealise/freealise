<!doctype html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <title>Movie editor</title>
        <style>
            html,
            body {
                overflow: hidden;
                width: 100%;
                height: 100%;
                margin: 0;
                padding: 0;
            }
        </style>
    </head>
    <body>
<input type='text' id='soundtrack' value='https://freeali.se/assets/mp3/nightingale_bird.mp3'/>
<input type="file" id="fileElemAudio" accept="audio/aac, audio/mpeg, audio/ogg, audio/wav, audio/webm" style="display:none" />
<button id="fileSelect">Upload soundtrack</button>
<br/>
<div id='subs_c'><textarea id="times" onscroll="scrollSubs(true);"></textarea><textarea id="subs" onscroll="scrollSubs(false);">line0

line1

line2

line3
</textarea></div>
<button id="add_times" onclick="addTimes();">add</button><a id="subs_link" href=""></a>
</div>
      <script>
        var times = document.getElementById("times");
        var subs = document.getElementById("subs");
        var subs_link = document.getElementById("subs_link");
        
        const fileSelect = document.getElementById("fileSelect"),
        fileElemAudio = document.getElementById("fileElemAudio");

        fileSelect.addEventListener("click", (e) => {
          fileElemAudio.click();
        }, false);
        fileElemAudio.addEventListener("change", handleFiles);

        function handleFiles(e) {
          if (!e.target.files.length) {
            document.getElementById("soundtrack").value = "No files selected!";
          } else {
            document.getElementById("soundtrack").value = URL.createObjectURL(e.target.files[0]);
          }
        }
        
        var avg = [];
        var avg_all = 0;
        var avg_old = 0;
        var start = Date.now();
        var d = new Date(start);
        const o = d.getTimezoneOffset()*60*1000;
        var t_old = 0;
        var time_old = '00:00:00.000';
        subs.value = 'WEBVTT\n\n' + subs.value;
        
        var then = new Date().getTime();
        var now, delta;
        const interval = 1000 / 25;
        const tolerance = 0.1;

        var startRenderLoop = function (engine, canvas) {
            engine.runRenderLoop(function () {
                now = new Date().getTime();
                delta = now - then;
                then = now - (delta % interval);
                if (delta >= interval - tolerance && sceneToRender && sceneToRender.activeCamera) {
                    sceneToRender.render();
                }
            });
        }
        
                      document.getElementById('play').addEventListener('click', function() {
                        try {
                        music = new BABYLON.Sound("Soundtrack", document.getElementById("soundtrack").value, scene, function(){
                            if (!BABYLON.Engine.audioEngine.unlocked) {
                                BABYLON.Engine.audioEngine.unlock();
                            }
                            ac = BABYLON.Engine.audioEngine.audioContext;
                            mediaStreamDestination = ac.createMediaStreamDestination();
                            //music.connectToSoundTrackAudioNode(mediaStreamDestination);
                            BABYLON.Engine.audioEngine.masterGain.connect(mediaStreamDestination);
        
                            music.play();
                        }, {
                          loop: true,
                          autoplay: false,
                        });
                        
                        music.onEndedObservable.add(function() {
                            setTime(j-1);
                            avg_all /= j;
                        });
        
        	            var analyser = new BABYLON.Analyser(scene);
        	            BABYLON.Engine.audioEngine.connectToAnalyser(analyser);
                        analyser.FFT_SIZE = 1024;
        	            analyser.SMOOTHING = 0.0;
                        analyser.DEBUGCANVASSIZE.width = 512;
                        analyser.DEBUGCANVASSIZE.height = 100;
                        analyser.DEBUGCANVASPOS.x = 0;
                        analyser.DEBUGCANVASPOS.y = 0;
                        analyser.drawDebugCanvas();

                        var j = 0;
                        start = Date.now();
                        scene.registerBeforeRender(function () {
        	                var workingArray = analyser.getByteFrequencyData();
                            avg[j] = 0;

                            for (var i = 0; i < analyser.getFrequencyBinCount(); i++) {
                                avg[j] += workingArray[i];
        	                 }
                            avg[j] = parseInt(avg[j] / analyser.getFrequencyBinCount());
                            avg_all += avg[j];
             
                            if (j>0 && avg[j] / avg[j-1] >= 2 && avg_old != j-1) {
                                setTime(j);
                                times.scrollBy(0, 32);
                                subs.scrollTo(0, times.scrollTop);
                            }
                            j++;
                    	 });
                        
                        } catch(e) {alert(e);}
                    }, { once: true });
                        

        function setTime(j) {
                 t = Date.now() - start;
                 d = new Date(t + o);
                 let h = addZeros(d.getHours(), 1);
                 let m = addZeros(d.getMinutes(), 1);
                 let s = addZeros(d.getSeconds(), 1);
                 let ms = addZeros(d.getMilliseconds(), 2);
                 let time = h + ":" + m + ":" + s + "." + ms;

                 times.value += time_old + ' --> ' + time + ' ' + ((t-t_old)/1000).toFixed(3) + ' ' + avg[j-1] + ' ' + avg[j] + '\n\n';
                 t_old = t;
                 time_old = time;
                 avg_old = j;
         }


         function addZeros(q, n) {
             var k = 0;
             while (k < n) {
                 if (q < Math.pow(10,n)) {
                     q = "0" + q;
                 }
                 k++;
             }
             return q;
         }
        
        
        //https://stackoverflow.com/questions/39610163/whats-the-benefit-of-webvtt-vtt-over-subreal-srt
         function addTimes() {
             var times_a = times.value.split('\n\n');
             var subs_a = subs.value.split('\n\n');
             for (var i=0; i<subs_a.length; i++) {
                 subs_a[i] = times_a[i] + '\n' + subs_a[i];
             }
             const v = subs_a.join('\n\n');
             subs_link.href = "data:text/vtt;base64," + btoa( v.slice(v.indexOf('WEBVTT\n\n')) );
             subs_link.download = 'subtitles.vtt';
             subs_link.click();
         }
        
        function scrollSubs(s) {
            if (s === true) {
                subs.scrollTo(0, times.scrollTop);
            } else {
                times.scrollTo(0, subs.scrollTop);
            }
        }
            
</script>
</body>
</html>