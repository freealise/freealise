<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Subtitles editor</title>
    <style>
        body {
            text-align: center;
            background-color:white;
          }
    </style>
</head>
<body>
    <div>
      <textarea cols="20" rows="15" onclick="addTimestamp(event);" title="Script" id="script" placeholder="Enter script here">
        
All human beings are born free and equal in dignity and rights.

They are endowed with reason and conscience 
and should act towards one another in a spirit of brotherhood.

All human beings are born free and equal in dignity and rights.

They are endowed with reason and conscience 
and should act towards one another in a spirit of brotherhood.

All human beings are born free and equal in dignity and rights.

They are endowed with reason and conscience 
and should act towards one another in a spirit of brotherhood.

</textarea><br/>
<button onclick="scrollSubs(false);">/\</button>
<button onclick="scrollSubs(true);">\/</button>
<button onclick="downloadSubs();">Download</button>
<a href="#" id="subs_link"></a><br/>

<audio controls onplay="this.currentTime=0;start=Date.now();" id='soundtrack' src=''></audio><br/>
<input type="file" id="fileElemAudio" accept="audio/aac, audio/mpeg, audio/ogg, audio/wav, audio/webm" style="display:none" />
<button id="fileSelect">Upload soundtrack</button>

    </div>
<script>
    var start = Date.now();
    var t = Date.now() - start;
    var d = new Date(start);
    const o = d.getTimezoneOffset()*60*1000;
    var t_old = 0;
    var time_old = '00:00:00.000';

        const fileSelect = document.getElementById("fileSelect"),
        fileElemAudio = document.getElementById("fileElemAudio");

        fileSelect.addEventListener("click", (e) => {
          fileElemAudio.click();
        }, false);
        fileElemAudio.addEventListener("change", handleFiles);

        function handleFiles(e) {
          if (!e.target.files.length) {
            alert("No files selected!");
          } else {
            document.getElementById("soundtrack").src = URL.createObjectURL(e.target.files[0]);
          }
        }

         function setTime() {
                 t = Date.now() - start;
                 d = new Date(t + o);
                 let h = addZeros(d.getHours(), 1);
                 let m = addZeros(d.getMinutes(), 1);
                 let s = addZeros(d.getSeconds(), 1);
                 let ms = addZeros(d.getMilliseconds(), 2);
                 let time = h + ":" + m + ":" + s + "." + ms;

                 const ts = time_old + ' --> ' + time + /*' ' + ((t-t_old)/1000).toFixed(3) +*/ '\n';
                 t_old = t;
                 time_old = time;
                 return ts;
         }


         function addZeros(q, n) {
             var k = 0;
             while (k < n) {
                 if (q < Math.pow(10,n)) {
                     q = "0" + q;
                 }
                 k++;
             }
             return q;
         }

    function addTimestamp(e) {
      var txt = e.target.value.trim();
      var tpos = txt.substr(0, e.target.selectionStart).lastIndexOf('\n\n');
      tpos = txt.substr(0, tpos).lastIndexOf('\n\n') + 2;
      if (tpos == 1) {
        tpos = 0;
        txt = '• ' + txt;
      }

      if (txt.substr(tpos, 2) == '• ') {
        txt = txt.substr(0, tpos) + setTime() + txt.substr(tpos+2);
        tpos = tpos + txt.substr(tpos).indexOf('\n\n') + 2;
        txt = txt.substr(0, tpos) + "• " + txt.substr(tpos);

      } else if (txt.substr(tpos).lastIndexOf('\n\n') == txt.substr(tpos).indexOf('\n\n')) {

        tpos = txt.lastIndexOf('• ');
        txt = txt.substr(0, tpos) + setTime() + txt.substr(tpos+2);
      }

      e.target.value = txt;
      e.target.setSelectionRange(tpos, tpos);
      e.target.blur();
      e.target.focus();
    
      var y = e.clientY - e.target.getBoundingClientRect().y + e.target.scrollTop;
      e.target.scrollTo(0, y-64);
    }

    function downloadSubs() {
      document.getElementById('subs_link').href = "data:text/vtt;base64," + btoa( 'WEBVTT\n\n' + document.getElementById('script').value );
      document.getElementById('subs_link').download = 'subtitles.vtt';
      document.getElementById('subs_link').click();
      document.getElementById('subs_link').href = "#";
    }

        function scrollSubs(s) {
          if (s === true) {
            document.getElementById('script').scrollBy(0, document.getElementById('script').rows * 16);
          } else {
            document.getElementById('script').scrollBy(0, -document.getElementById('script').rows * 16);
          }
        }

</script>
</body>
</html>