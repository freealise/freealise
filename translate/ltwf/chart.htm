<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
      google.charts.load('current', {packages:['wordtree']});
      google.charts.setOnLoadCallback(drawChart);

//TODO: pure tags without inline css, add parser, check by grammar books

// https://developers.google.com/chart/interactive/docs/gallery/wordtree
// )4_ADJ_, @6_ADP_, }5_ADV_, &9_CONJ_, =1_DET_, ]2_NOUN_, %10_NUM_, *7_PRON_, #8_PRT_, >3_VERB_

      var a = [ ['phrase', 'size', 'value', 'link'],
['x > verb \u237F \u239A  see saw seen', 1, 0.5, 'A 1-01'],
['x ] noun \u2B1A \u23CD  thing', 1, 1, 'A 1-02'],
['x ] noun \u2B1A \u25A2  something', 1, 1, 'A 1-02'],
['x ] noun \u2B1A \u2B1A\u0309  what', 1, 1, 'A 1-02'],
['x = det \u2261  this these', 1, 1, 'A 1-03'],
['x = det \u2262  other', 1, 1, 'A 1-04'],
['x = det \u2260  another', 1, 1, 'A 1-04'],
['x # prt \u2331  else', 1, 1, 'A 1-04'],
['x = det \u2256  same', 1, 1, 'B 1-05'],
['x > verb \u221E \u2022  be am are is being was were been', 1, 1, 'B 1-05'],
['x & conj ~ \u224E  as', 1, 1, 'B 1-05'],
['x ) adj % num \u2680  one', 1, 1, 'B 1-06'],
['x ) adj % num \u2681  two', 1, 1, 'B 1-07'],
['x ] noun \u25CC \u2389  person people', 1, 1, 'B 1-08'],
['x ) adj % num \u066A  many', 1, 1, 'C 1-09'],
['x ) adj % num \u29A6  much', 1, 1, 'C 1-09'],
['x ) adj % num \u299F  little', 1, 1, ''],
['x ) adj % num \u060A  few', 1, 1, ''],
['x # prt \u2612  not', 1, 1, 'C 1-11'],
['x ) adj % num \u0609  some', 1, 1, 'D 1-12'],
['x ) adj % num \u2140  all', 1, 1, 'D 1-13'],
['x @ adp \u26B2 \u2316  there', 1, 1, 'D 1-14'],
['x ) adj \u238E +  more', 1, 1, 'D 1-15'], //\u29FD
['x ) adj \u238E \u2AA4  than', 1, 1, 'D 1-15'],
['x > verb \u221E \u2698  live living alive', 1, 1, 'E 1-16'],
['x ) adj \u2300 \u235C  big', 1, 1, 'E 1-17'],
['x ) adj \u2300 \u235B  small', 1, 1, 'E 1-18'],
['x ) adj \u238E \u203C  very', 1, 1, 'E 1-19'],
['x ] noun \u22D4 \u2443  kind', 1, 1, 'F 1-20'],
['x # prt \u29BD  if', 1, 1, 'F 1-21'],
['x # prt \u22B1  then', 1, 1, 'F 1-21'],
['x > verb \u237F \u226C  touch', 1, 1, 'F 1-22'],
['x @ adp \u26B2 \u22BC  far', 1, 1, 'F 1-23"'],
['x @ adp \u26B2 \u29CB  near', 1, 1, 'F 1-24'],
['x ] noun \u22D4 \u22B9  place', 1, 1, 'G 1-25'],
['x @ adp \u26B2 \u2388  somewhere', 1, 1, 'G 1-25'],
['x @ adp \u26B2 \u26B2\u0309  where', 1, 1, 'G 1-25'],
['x & conj \u26CB  in inside', 1, 1, 'C 1-10'],
['x @ adp \u26B2 \u2238  above', 1, 1, 'G 1-26'],
['x ] noun \u22D4 \uFB35  side', 1, 1, 'G 1-27'],
['x & conj \u2390  on', 1, 1, 'G 1-27'],
['x > verb \u237F \u23E6  hear heard', 1, 1, 'H 1-28'],
['x > verb \u263C \u2383  say said', 1, 1, 'H 1-29'],
['x & conj ~ \u2248  about', 1, 1, 'H 1-29'],
['x ] noun \u22D4 \u2381  word', 1, 1, 'H 1-30'],
['x # prt \u23FB  true', 1, 1, 'H 1-31'],
['x & conj ~ \u29C9  like', 1, 1, 'A 2-01'],
['x > verb \u263C \u00A4  have has had', 1, 1, 'A 2-02'],
['x > verb \u263C \u232D  belong', 1, 1, 'A 2-02'],
['x ] noun \u22D4 \u2314  part', 1, 1, 'A 2-03'],
['x & conj \u29C2  of', 1, 1, 'A 2-03'],
['x > verb \u23CE \u2425  do does doing did done', 1, 1, 'B 2-04'],
['x & conj \u26AF  with', 1, 1, 'B 2-04'],
['x > verb \u23CE \u2311  happen', 1, 1, 'B 2-05'],
['x # prt \u22B0  because', 1, 1, 'B 2-06'],
['x > verb \u23E7 \u22EF  think thought thinking', 1, 1, 'C 2-07'],
['x > verb \u23E7 \u2299  know knew known', 1, 1, 'C 2-08'],
['x > verb \u23E7 \u238B  want', 1, 1, 'C 2-09'],
['x > verb \u23E7 \u224D  can could cannot', 1, 1, 'C 2-10'],
['x ) adj \u233F \u237B  bad', 1, 1, 'D 2-11'],
['x ) adj \u233F \u23B7  good well', 1, 1, 'D 2-12'],
['x > verb \u23E7 \u2661  feel felt feeling', 1, 1, 'D 2-13'],
['x ] noun \u22D4 \u29D6  time', 1, 1, 'E 2-14'],
['x @ adp \u23FC \u23FC\u0309  when', 1, 1, 'E 2-14'],
['x & conj \u2380  at', 1, 1, 'E 2-14'],
['x @ adp \u23FC \u27E3  before', 1, 1, 'E 2-15'],
['x ) adj \u2300 \u27F7  long', 1, 1, 'E 2-16'],
['x ) adj \u2300 \u21AD  short', 1, 1, 'E 2-17'],
['x > verb \u23CE \u238C  move', 1, 1, 'E 2-18'],
['x & conj \u2386  to', 1, 1, 'F 1-24'],
['x ] noun * pron \u2369  I', 1, 1, 'F 2-19'],
['x ] noun * pron \u2364  me', 1, 1, 'F 2-19'],
['x ] noun * pron \u2368  you', 1, 1, 'F 2-20'],
['x @ adp \u26B2 \u27DF  here', 1, 1, 'F 2-21'],
['x @ adp \u23FC \u22C8  now', 1, 1, 'F 2-22'],
['x ] noun \u25CC \u2687  someone', 1, 1, 'G 2-23'],
['x ] noun \u25CC \u25CC\u0309  who whom', 1, 1, 'G 2-23'],
['x @ adp \u23FC \u27E2  after', 1, 1, 'G 2-24'],
['x & conj \u29C3  for', 1, 1, 'D 2-12'],
['x ] noun \u22D4 \u27E1  moment', 1, 1, 'G 2-26'],
['x ] noun \u22D4 \u2021  body', 1, 1, 'H 2-27'],
['x > verb \u221E \u2A4D  die dying dead', 1, 1, 'H 2-28'],
['x # prt \u2325  maybe', 1, 1, 'H 2-29'],
['x @ adp \u26B2 \u2A2A  below', 1, 1, 'H 2-30'],
          ];

var ltr = 'ABCDEFGH';
a[0][4] = 'level';

for (var i=1; i<a.length; i++) {
  a[i][4] = (parseInt(a[i][3].charAt(2))-1) * 8 + ltr.indexOf(a[i][3].charAt(0));
}

      function drawChart() {
        var data = google.visualization.arrayToDataTable(a);

        var root = document.getElementById('root').value;
        var options = {
          width: 512,
          height: 1024,
          fontName: 'monospace',
          colors: ['#808080', '#000000'],
          wordtree: {
            format: 'implicit',
            type: 'suffix',
            word: root
          }
        };

        var chart = new google.visualization.WordTree(document.getElementById('wordtree_basic'));

        var view = new google.visualization.DataView(data);
        view.setColumns([0,1,2]);
        chart.draw(view, options); //data

        document.getElementById('go').onclick = drawChart;

        resetColors();
      }


      var sel = {};
      var g = document.createElementNS('http://www.w3.org/2000/svg', 'g');
      g.setAttribute('id', 'g');

      function resetColors() {
        var paths = document.getElementById('wordtree_basic').getElementsByTagName('path');
        for (var i=0; i<paths.length; i++) {
          paths[i].setAttribute('fill', '#f0f0f0');
        }

        var txt = document.getElementById('wordtree_basic').getElementsByTagName('text');

        if (g.innerHTML == '') {
          for (var i=0; i<txt.length; i++) {
            /*if (txt[i].textContent == 'ADJ') {
              txt[i].setAttribute('fill', '#0000ff');
            }*/
            if (txt[i+1] && txt[i].textContent.search(/\W/) > -1 && txt[i+1].textContent.search(/\W/) == -1) {

              var pb = -1;
              for (var j=0; j<a.length; j++) {
                var tmp = a[j][0].split('  ');
                var tmp = ' ' + tmp[tmp.length-1] + ' ';

                if (tmp.indexOf(' '+txt[i+1].textContent+' ') >= 0) {
                  pb = a[j][4];
                  break;
                }
              }
              if (pb >= 0) {
                var arc = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
                arc.setAttribute('cx', txt[i].getAttribute('x')-6);
                arc.setAttribute('cy', txt[i].getAttribute('y')-2);
                arc.setAttribute('stroke', 'darkgray');
                arc.setAttribute('stroke-width', '2');
                arc.setAttribute('fill', 'none');
                arc.setAttribute('r', '1');
                arc.setAttribute('pathLength', '360');
                arc.setAttribute('stroke-dasharray', ''+(22.5*pb)+' '+(360-22.5*pb));
                arc.setAttribute('transform', 'rotate(-90 '+arc.getAttribute('cx')+' '+arc.getAttribute('cy')+')');
                g.appendChild(arc);
                document.getElementsByTagName('svg')[0].appendChild(g);
              }
            }
          }
        }
        for (var i=0; i<txt.length; i++) {
          if (sel[txt[i].textContent]) {
            txt[i].setAttribute('stroke-width', '1');
            txt[i].setAttribute('stroke', txt[i].getAttribute('fill'));
          }

          txt[i].setAttribute('onclick', 'lookupWord(this, event)');
          txt[i].setAttribute('onpointerup', 'selectWord(this, event)');
          txt[i].setAttribute('onpointerdown', 'selectWord(this, event)');
        }
        document.getElementById('svg').innerText = document.getElementById('wordtree_basic').innerHTML;
        document.getElementById('svg').style.display = 'none';

        ltwf.style.display = 'none';
        tl.style.display = 'none';
      }


      var x = 0, y = 0;
      var md = false;

      function selectWord(et, evt) {
        if (md===false || (md===true && parseInt(evt.clientX)==x && parseInt(evt.clientY)==y)) {

          if (sel[et.textContent] === true) {
            delete sel[et.textContent];

            et.setAttribute('stroke-width', '0');
            et.setAttribute('stroke', 'none');
          } else {
            sel[et.textContent] = true;

            et.setAttribute('stroke-width', '1');
            et.setAttribute('stroke', et.getAttribute('fill'));
          }
        }
        document.getElementById('status').innerText = JSON.stringify(sel);
        x = parseInt(evt.clientX);
        y = parseInt(evt.clientY);
        md = !md;
      }

      function lookupWord(et, evt) {
        if (et.textContent == 'x') {
          g.style.display = 'block';
        } else {
          g.style.display = 'none';
        }
        var found = false;
        for (var i=0; i<a.length; i++) {
          var tmp = a[i][0].split('  ');
          var tmp = ' ' + tmp[tmp.length-1] + ' ';

          if (tmp.indexOf(' '+et.textContent+' ') >= 0) {
            loadBasicWords(a[i][3]);
            found = true;
            break;
          }
        }
        if (found === false) {
          ltwf.style.display = 'none';
          tl.style.display = 'none';
        }
      }


      /*var cl = 0;

      function highlightWords_(q) {
        var style = document.createElement('style');
        style.type = 'text/css';
        style.innerHTML = '';

        var res = q.replace(/[>\s\"][a-zA-Z]+[\s.,?!:<]/g, function(x){
          var b = '';
          for (var i=0; i<parseInt(Math.random()*16); i++) {
            b += '0 0 0.67px,';
          }
          b = b.slice(0,-1);

          style.innerHTML += ".c"+cl+" { 
//display:inline-block;
//rotate:"+parseInt(Math.random()*22.5-11.25)+"deg;

letter-spacing:"+parseInt(Math.random()*4-2)+"px;

//text-shadow:"+b+";

//color:hsl("+parseInt(Math.random()*360)+",100%,10%);

//font-size:"+parseInt(32-Math.random()*16)+"px;

//opacity:"+(100-Math.random()*80)+"%;

//position:relative;
//top:"+parseInt(Math.random()*8-4)+"px; }";
          cl++;

          return x.slice(0,1)+"<span class='c"+cl+"'>"+x.slice(1,-1)+"</span>"+x.slice(-1);
        });

        return style.outerHTML + res;  
      }*/


      function highlightWords(q) {
        return q.replace(/[>\s\"][a-zA-Z]+[\s.,?!:<]/g, function(x){
          var b = '';
          var d = '';
          for (var i=0; i<parseInt(Math.random()*8)+1; i++) {
            b += '<span>';
            d += '</span>';
          }
          x = x.slice(0,1)+b+x.slice(1,-1)+d+x.slice(-1);

          /*var b = '';
          var d = '';
          for (var i=0; i<parseInt(Math.random()*8)+1; i++) {
            b += '<u>';
            d += '</u>';
          }
          x = x.slice(0,1)+b+x.slice(1,-1)+d+x.slice(-1);

          var b = '';
          var d = '';
          for (var i=0; i<parseInt(Math.random()*8)+1; i++) {
            b += '<s>';
            d += '</s>';
          }
          x = x.slice(0,1)+b+x.slice(1,-1)+d+x.slice(-1);
          */

          var b = '';
          var d = '';
          for (var i=0; i<parseInt(Math.random()*8)+1; i++) {
            b += '<small>';
            d += '</small>';
          }
          x = x.slice(0,1)+b+x.slice(1,-1)+d+x.slice(-1);

          /*var b = '';
          var d = '';
          for (var i=0; i<parseInt(Math.random()*8)+1; i++) {
            b += '<i>';
            d += '</i>';
          }
          x = x.slice(0,1)+b+x.slice(1,-1)+d+x.slice(-1);

          var b = '';
          var d = '';
          for (var i=0; i<parseInt(Math.random()*8)+1; i++) {
            b += '<em>';
            d += '</em>';
          }
          x = x.slice(0,1)+b+x.slice(1,-1)+d+x.slice(-1);

          var b = '';
          var d = '';
          for (var i=0; i<parseInt(Math.random()*8)+1; i++) {
            b += '<b>';
            d += '</b>';
          }
          x = x.slice(0,1)+b+x.slice(1,-1)+d+x.slice(-1);
          */

          return x;
        });
      }


      function loadBasicWords(q) {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
            var arr = this.responseText.split('<body>');

            arr[1] = highlightWords(arr[1]);
            var res = arr[0] + '<body>' + highlightWords(arr[1]).replace(/<a /g, "<a target='_blank' style='text-decoration:none' ");

            ltwf_.document.open();
            ltwf_.document.write(res.replace('</body>', document.getElementById('tw').value.split('<div')[0]+'</body>'));
            ltwf_.document.close();

            tl_.document.open();
            tl_.document.write(res.replace('</body>', document.getElementById('tw').value+'</body>'));
            tl_.document.close();

            ltwf.onload = function() {
              setTimeout(function() {
                ltwf.src = "#" + q.split(" ")[1];
                tl.src = "#" + q.split(" ")[1];

                ltwf_.document.getElementById(q.split(" ")[1]).scrollIntoView();
                tl_.document.getElementById(q.split(" ")[1]).scrollIntoView();
                
                document.getElementById('root').scrollIntoView();

                ltwf_.onscroll = function(e){tl_.scrollTo(0, ltwf_.scrollY);}
                tl_.onscroll = function(e){ltwf_.scrollTo(0, tl_.scrollY);}

              }, 40);
            };

            ltwf.style.display = 'block';
            tl.style.display = 'block';

            ltwf.blur();
            tl.blur();
          }
        };
        xhttp.open("GET", url + "?a=nsm&q=" + q.replace(" ", "_"), true);
        xhttp.send();
      }

    </script>
  </head>
  <body>

    <div style='position:absolute;z-index:1'><label for="root">Word:</label> <input value="x" id="root"><input type="button" value="go" id="go"><button onclick='alert(tl_.document.body.innerHTML.split("</style>\n")[1]);'>Show code</button></div>
    
    <div onclick='resetColors()' id="wordtree_basic" style="user-select: none; width: 512px;"></div>
    <iframe id="ltwf" style="display:none; top:36px; left:0px; width:160px; height:448px; position:absolute;" src="about:blank"></iframe>
    <iframe id="tl" style="display:none; top:36px; left:160px; width:160px; height:448px; position:absolute;" src="about:blank"></iframe>

    <textarea id='status'></textarea>
    <textarea cols=100 rows=25 id='svg'></textarea>

    <textarea id='tw' style='display:none'>
<style>
    iframe {
      display: none !important;
    }
    body {
      top: 0px !important;
    }
    span {
      opacity: 80%;
    }
    span::after {
      content: '` ';
    }
    u {
      text-decoration: none;
      color: #ff0000;
      filter: hue-rotate(45deg);
    }
    s {
      text-decoration: none;
      position: relative;
      top: -0.0625em;
    }
    small {
      font-size: 95%;
    }
    i {
      font-style: normal;
      display: inline-block;
      rotate: 1deg;
    }
    em {
      font-style: normal;
      display: inline-block;
      rotate: -1deg;
    }
    b {
      font-weight: normal;
      text-shadow: 0 0 0.5px;
    }
</style>
<div style="position:fixed;bottom:-20px;right:0;" id="google_translate_element"></div>
<script>
    function googleTranslateElementInit() {
        new google.translate.TranslateElement(
            { pageLanguage: 'en', /*layout: google.translate.TranslateElement.InlineLayout.SIMPLE*/ },
            'google_translate_element'
        );
    }
</script>
<script src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
    </textarea>

        <script language="Javascript">
      var ltwf = document.getElementById('ltwf');
      ltwf_ = ltwf.contentWindow || (ltwf.contentDocument.document || ltwf.contentDocument);

      var tl = document.getElementById('tl');
      tl_ = tl.contentWindow || (tl.contentDocument.document || tl.contentDocument);

      var url = "https://script.google.com/macros/s/AKfycbz5br4wnfSGtucWKwGQq1Tb07eshJez6uVaFatn4xJAc_rcrcA/exec";

        </script>
  </body>
</html>